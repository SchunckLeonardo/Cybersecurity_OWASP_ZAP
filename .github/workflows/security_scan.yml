name: Análise de Segurança com OWASP ZAP

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Dar permissão de execução ao gradlew
        run: chmod +x ./gradlew

      - name: Iniciar aplicação em background
        run: |
          ./gradlew bootRun &
          echo "Aguardando 30 segundos para a aplicação iniciar..."
          sleep 30

      - name: Executar OWASP ZAP Baseline Scan
        run: |
          docker run --rm \
            -v $(pwd):/zap/wrk/:rw \
            --network="host" \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://127.0.0.1:8080 \
            -r report.html \
            -w report.md \
            --hook=/zap/wrk/zap-hooks.py || echo "Scan ZAP concluído com possíveis alertas."

      - name: Verificar Resultados do Scan
        run: |
          echo "Analisando o relatório em busca de vulnerabilidades de severidade Alta..."
          # O relatório MD tem a seção 'Risk: High'. Contamos as ocorrências.
          # '|| true' evita que o grep falhe se não encontrar nada.
          high_alerts=$(grep -c "Risk: High" report.md || true)
          
          echo "Alertas de severidade Alta encontrados: $high_alerts"

          if [ "$high_alerts" -gt 0 ]; then
            echo "::error::Pipeline falhou devido a $high_alerts vulnerabilidade(s) de severidade Alta."
            exit 1
          else
            echo "Nenhuma vulnerabilidade de severidade Alta foi encontrada."
          fi

      - name: Fazer upload do relatório como artefato
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-zap
          path: report.html
